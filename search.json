[{"path":"https://yhoriuchi.github.io/projoint/articles/02-wrangle.html","id":"load-the-projoint-package","dir":"Articles","previous_headings":"","what":"2.1 Load the projoint package","title":"02. Read and wrangle your data for conjoint analysis","text":"","code":"library(projoint)"},{"path":[]},{"path":"https://yhoriuchi.github.io/projoint/articles/02-wrangle.html","id":"with-the-flipped-repeated-tasks","dir":"Articles","previous_headings":"2.2 Read and wrangle data","what":"With the flipped repeated tasks","title":"02. Read and wrangle your data for conjoint analysis","text":"Let’s look simple example. expand arguments clarity: Let’s walk arguments specified. .dataframe data frame, ideally read Qualtrics using read_Qualtrics() necessarily. .idvar argument, character, indicates exampleData1, column ResponseId indicates unique survey respondents. .outcomes variable lists columns outcomes; last element vector repeated task (conducted). .outcomes_ids indicates possible options outcome; specifically, vector characters two elements, last characters names first second profiles. example, c(“”, “B”) profile names “Candidate ” “Candidate B”. character vector can anything, c(“1”, “2”), c(“”, “b”), etc. multiple tasks design, use profile names across tasks. .alphabet defaults “K” conjoint survey conducted using either tool Strezhnev’s Conjoint Survey Design Tool. final two arguments, .repeated .flipped, relate repeated task. .repeated set TRUE, last element .outcomes vector taken repetition first task; .flipped indicates whether profiles reversed order.","code":"outcomes <- paste0(\"choice\", seq(from = 1, to = 8, by = 1)) outcomes <- c(outcomes, \"choice1_repeated_flipped\") out1 <- reshape_projoint(.dataframe = exampleData1,                           .idvar = \"ResponseId\",                           .outcomes = outcomes,                          .outcomes_ids = c(\"A\", \"B\"),                          .alphabet = \"K\",                           .repeated = TRUE,                          .flipped = TRUE)"},{"path":"https://yhoriuchi.github.io/projoint/articles/02-wrangle.html","id":"with-the-not-flipped-repeated-tasks","dir":"Articles","previous_headings":"2.2 Read and wrangle data","what":"With the not-flipped repeated tasks","title":"02. Read and wrangle your data for conjoint analysis","text":"slight variation, cases repeated task flipped – , repeated task, original Profile 1 still Profile 1, rather flipping positions Profile 2. specify changing .flipped FALSE.","code":"outcomes <- paste0(\"choice\", seq(from = 1, to = 8, by = 1)) outcomes <- c(outcomes, \"choice1_repeated_notflipped\") out2 <- reshape_projoint(.dataframe = exampleData2,                           .idvar = \"ResponseId\",                           .outcomes = outcomes,                          .outcomes_ids = c(\"A\", \"B\"),                          .alphabet = \"K\",                           .repeated = TRUE,                          .flipped = FALSE)"},{"path":"https://yhoriuchi.github.io/projoint/articles/02-wrangle.html","id":"without-the-repeated-tasks","dir":"Articles","previous_headings":"2.2 Read and wrangle data","what":"Without the repeated tasks","title":"02. Read and wrangle your data for conjoint analysis","text":"cases repeated task , set .repeated FALSE .flipped NULL:","code":"outcomes <- paste0(\"choice\", seq(from = 1, to = 8, by = 1)) out3 <- reshape_projoint(.dataframe = exampleData3,                           .idvar = \"ResponseId\",                           .outcomes = outcomes,                          .outcomes_ids = c(\"A\", \"B\"),                          .alphabet = \"K\",                           .repeated = FALSE,                          .flipped = NULL)"},{"path":"https://yhoriuchi.github.io/projoint/articles/02-wrangle.html","id":"arrange-the-order-and-labels-of-attributes-and-levels","dir":"Articles","previous_headings":"","what":"2.3 Arrange the order and labels of attributes and levels","title":"02. Read and wrangle your data for conjoint analysis","text":"reshaped data attributes levels sorted alphabetically. Often, however, want reorder attributes /order levels particular attribute. may also prefer use actual labels attributes levels used conjoint experiments; example, purpose presentation, may want make shorter. process challenging applied scholars using packages. make process easy. first save labels using save_labels(). CSV file save local computer, revise column named order specify order attributes levels want display figure. can also revise labels attributes levels way like. make change first column named level_id. saving updated CSV file, use read_labels() read save object suitable next step (.e., use projoint()). can find data set GitHub: labels_original.csv labels_arranged.csv. figure based original order labels alphabetical order:  labels order attribute-levels second figure Figure 2 Mummolo Nall (2017).","code":"save_labels(out1, \"temp/labels_original.csv\") out1_arranged <- read_labels(out1, \"temp/labels_arranged.csv\") mm <- projoint(out1, .estimand = \"mm\") plot_projoint(mm, .estimand = \"mm\") mm <- projoint(out1_arranged, .estimand = \"mm\") plot_projoint(mm, .estimand = \"mm\")"},{"path":"https://yhoriuchi.github.io/projoint/articles/03-predict.html","id":"load-the-projoint-package","dir":"Articles","previous_headings":"","what":"3.1 Load the projoint package","title":"03. Predict the intra-respondent reliability (IRR)","text":"","code":"library(projoint)"},{"path":"https://yhoriuchi.github.io/projoint/articles/03-predict.html","id":"read-and-wrangle-data-without-the-repeated-tasks","dir":"Articles","previous_headings":"","what":"3.2 Read and wrangle data without the repeated tasks","title":"03. Predict the intra-respondent reliability (IRR)","text":", start reshaping data setting .repeated FALSE:","code":"outcomes <- paste0(\"choice\", seq(from = 1, to = 8, by = 1)) out3 <- reshape_projoint(.dataframe = exampleData3,                           .idvar = \"ResponseId\",                           .outcomes = outcomes,                          .outcomes_ids = c(\"A\", \"B\"),                          .alphabet = \"K\",                           .repeated = FALSE,                          .flipped = NULL)"},{"path":"https://yhoriuchi.github.io/projoint/articles/03-predict.html","id":"predict-irr-based-on-the-extrapolation-method","dir":"Articles","previous_headings":"","what":"3.3 Predict IRR based on the extrapolation method","title":"03. Predict the intra-respondent reliability (IRR)","text":", pass data set predict_tau function, calculates IRR produces figure showing extrapolation method visually.","code":"predicted_irr <- predict_tau(out3) predicted_irr@irr ## # A tibble: 8 × 2 ##       x predicted ##   <int>     <dbl> ## 1     0     0.743 ## 2     1     0.709 ## 3     2     0.675 ## 4     3     0.640 ## 5     4     0.606 ## 6     5     0.572 ## 7     6     0.537 ## 8     7     0.503 predicted_irr@figure"},{"path":"https://yhoriuchi.github.io/projoint/articles/04-estimate.html","id":"load-the-projoint-package-and-set-up-the-data","dir":"Articles","previous_headings":"","what":"4.1 Load the projoint package and set up the data","title":"04. Estimate corrected MMs or AMCEs","text":"","code":"library(projoint)  outcomes <- paste0(\"choice\", seq(from = 1, to = 8, by = 1)) outcomes <- c(outcomes, \"choice1_repeated_flipped\") out1 <- reshape_projoint(.dataframe = exampleData1,                           .idvar = \"ResponseId\",                           .outcomes = outcomes,                          .outcomes_ids = c(\"A\", \"B\"),                          .alphabet = \"K\",                           .repeated = TRUE,                          .flipped = TRUE)"},{"path":"https://yhoriuchi.github.io/projoint/articles/04-estimate.html","id":"estimate-mms","dir":"Articles","previous_headings":"","what":"4.2 Estimate MMs","title":"04. Estimate corrected MMs or AMCEs","text":"two main setups projoint can produce estimates. profile-level common approach literature, choice-level flexible powerful.","code":""},{"path":"https://yhoriuchi.github.io/projoint/articles/04-estimate.html","id":"mm-profile-level-all-levels","dir":"Articles","previous_headings":"4.2 Estimate MMs","what":"MM (profile-level) – all levels","title":"04. Estimate corrected MMs or AMCEs","text":"default method projoint estimate marginal means (MMs) profile-level. run projoint(out1), conduct analysis. expand arguments clarity:","code":"mm0 <- projoint(.data = out1,                 .qoi = NULL,                 .structure = \"profile_level\",                 .estimand = \"mm\",                 .se_method = \"analytical\",                 .irr = NULL,                  .remove_ties = TRUE,                 .ignore_position = NULL,                 .n_sims = NULL,                 .n_boot = NULL,                 .weights_1 = NULL,                 .clusters_1 = NULL,                 .se_type_1 = \"classical\",                 .weights_2 = NULL,                 .clusters_2 = NULL,                 .se_type_2 = \"classical\")  mm0@estimates ## # A tibble: 48 × 7 ##    estimand       estimate     se conf.low conf.high attribute level  ##    <chr>             <dbl>  <dbl>    <dbl>     <dbl> <chr>     <chr>  ##  1 mm_uncorrected    0.574 0.0134    0.548     0.601 att1      level1 ##  2 mm_corrected      0.614 0.0207    0.573     0.654 att1      level1 ##  3 mm_uncorrected    0.485 0.0134    0.458     0.511 att1      level2 ##  4 mm_corrected      0.477 0.0204    0.437     0.517 att1      level2 ##  5 mm_uncorrected    0.445 0.0131    0.419     0.470 att1      level3 ##  6 mm_corrected      0.416 0.0203    0.376     0.455 att1      level3 ##  7 mm_uncorrected    0.489 0.0133    0.463     0.515 att2      level1 ##  8 mm_corrected      0.483 0.0202    0.443     0.522 att2      level1 ##  9 mm_uncorrected    0.524 0.0130    0.498     0.549 att2      level2 ## 10 mm_corrected      0.536 0.0200    0.497     0.575 att2      level2 ## # ℹ 38 more rows"},{"path":"https://yhoriuchi.github.io/projoint/articles/04-estimate.html","id":"mm-profile-level-specific-level","dir":"Articles","previous_headings":"4.2 Estimate MMs","what":"MM (profile-level) – specific level","title":"04. Estimate corrected MMs or AMCEs","text":"However, also possible specify precise attributes, attribute levels, interest using set_qoi function . set_qoi function main way users specify complex estimands conjoint analysis. Al arguments qoi() expanded clarify, default arguments projoint() dropped simplicity:","code":"qoi_1 <- set_qoi(   .structure = \"profile_level\",   .estimand = \"mm\",   .attribute = \"att1\",    .level = \"level1\")  mm1 <- projoint(.data = out1,                 .qoi = qoi_1)  mm1@estimates ## # A tibble: 2 × 7 ##   estimand       estimate     se conf.low conf.high attribute level  ##   <chr>             <dbl>  <dbl>    <dbl>     <dbl> <chr>     <chr>  ## 1 mm_uncorrected    0.574 0.0134    0.548     0.601 att1      level1 ## 2 mm_corrected      0.614 0.0207    0.573     0.654 att1      level1"},{"path":"https://yhoriuchi.github.io/projoint/articles/04-estimate.html","id":"mm-profile-level-specific-level-using-the-predicted-irr","dir":"Articles","previous_headings":"4.2 Estimate MMs","what":"MM (profile-level) – specific level, using the predicted IRR","title":"04. Estimate corrected MMs or AMCEs","text":"conjoint survey design include recommended repeated task, can use specific value .irr, can estimate using predict_tau() function specify value based prior knowledge. following, use 0.75, likely IRR find test data sets. defaul arguments set_qoi() projoint() dropped hereafter.","code":"mm1b <- projoint(.data = out1,                  .qoi = qoi_1,                  .irr = 0.75)  mm1b@estimates ## # A tibble: 2 × 7 ##   estimand       estimate     se conf.low conf.high attribute level  ##   <chr>             <dbl>  <dbl>    <dbl>     <dbl> <chr>     <chr>  ## 1 mm_uncorrected    0.574 0.0134    0.548     0.601 att1      level1 ## 2 mm_corrected      0.605 0.0190    0.568     0.643 att1      level1"},{"path":"https://yhoriuchi.github.io/projoint/articles/04-estimate.html","id":"mm-choice-level-specific-level","dir":"Articles","previous_headings":"4.2 Estimate MMs","what":"MM (choice-level) – specific level","title":"04. Estimate corrected MMs or AMCEs","text":"soon users wish switch profile-level choice-level analysis, set_qoi function required. exponentially choice-level estimands profile-level estimands, impractical view . specify want return marginal mean attribute 1, levels 1 3 choice-level.","code":"qoi_2 <- set_qoi(   .structure = \"choice_level\",   .attribute = \"att1\",    .level = c(\"level1\", \"level3\") )   mm2 <- projoint(.data = out1,                 .qoi = qoi_2,                 .structure = \"choice_level\",                 .ignore_position = FALSE)  mm2@estimates ## # A tibble: 2 × 7 ##   estimand       estimate     se conf.low conf.high attribute level          ##   <chr>             <dbl>  <dbl>    <dbl>     <dbl> <chr>     <chr>          ## 1 mm_uncorrected    0.402 0.0258    0.352     0.453 att1      level1, level3 ## 2 mm_corrected      0.351 0.0408    0.271     0.431 att1      level1, level3"},{"path":"https://yhoriuchi.github.io/projoint/articles/04-estimate.html","id":"estimate-amces","dir":"Articles","previous_headings":"","what":"4.3 Estimate AMCEs","title":"04. Estimate corrected MMs or AMCEs","text":"Note can replicate analyses using AMCE instead MM just specifying .estimand = \"amce\" rather default \"mm\".","code":""},{"path":"https://yhoriuchi.github.io/projoint/articles/04-estimate.html","id":"amce-profile-level-all-levels","dir":"Articles","previous_headings":"4.3 Estimate AMCEs","what":"AMCE (profile-level) – all levels","title":"04. Estimate corrected MMs or AMCEs","text":"","code":"amce0 <- projoint(.data = out1,                   .estimand = \"amce\")  amce0@estimates ## # A tibble: 34 × 8 ##    estimand         estimate     se conf.low conf.high attribute level  baseline ##    <chr>               <dbl>  <dbl>    <dbl>     <dbl> <chr>     <chr>  <chr>    ##  1 amce_uncorrected -0.0899  0.0190 -0.127     -0.0527 att1      level2 level1   ##  2 amce_corrected   -0.137   0.0290 -0.194     -0.0801 att1      level2 level1   ##  3 amce_uncorrected -0.130   0.0188 -0.167     -0.0931 att1      level3 level1   ##  4 amce_corrected   -0.198   0.0294 -0.256     -0.140  att1      level3 level1   ##  5 amce_uncorrected  0.0348  0.0186 -0.00170    0.0713 att2      level2 level1   ##  6 amce_corrected    0.0530  0.0284 -0.00258    0.109  att2      level2 level1   ##  7 amce_uncorrected -0.00177 0.0188 -0.0386     0.0350 att2      level3 level1   ##  8 amce_corrected   -0.00270 0.0286 -0.0589     0.0535 att2      level3 level1   ##  9 amce_uncorrected  0.0240  0.0204 -0.0159     0.0640 att3      level2 level1   ## 10 amce_corrected    0.0366  0.0312 -0.0246     0.0979 att3      level2 level1   ## # ℹ 24 more rows"},{"path":"https://yhoriuchi.github.io/projoint/articles/04-estimate.html","id":"amce-profile-level-specific-level","dir":"Articles","previous_headings":"4.3 Estimate AMCEs","what":"AMCE (profile-level) – specific level","title":"04. Estimate corrected MMs or AMCEs","text":"","code":"qoi_3 <- set_qoi(   .structure = \"profile_level\",   .estimand = \"amce\",   .attribute = \"att1\",    .level = \"level3\",   .baseline = \"level1\" )  amce1 <- projoint(.data = out1,                   .qoi = qoi_3,                   .estimand = \"amce\")  amce1@estimates ## # A tibble: 2 × 8 ##   estimand         estimate     se conf.low conf.high attribute level  baseline ##   <chr>               <dbl>  <dbl>    <dbl>     <dbl> <chr>     <chr>  <chr>    ## 1 amce_uncorrected   -0.130 0.0188   -0.167   -0.0931 att1      level3 level1   ## 2 amce_corrected     -0.198 0.0294   -0.256   -0.140  att1      level3 level1"},{"path":"https://yhoriuchi.github.io/projoint/articles/04-estimate.html","id":"amce-profile-level-specific-level-using-the-predicted-irr","dir":"Articles","previous_headings":"4.3 Estimate AMCEs","what":"AMCE (profile-level) – specific level, using the predicted IRR","title":"04. Estimate corrected MMs or AMCEs","text":"","code":"amce1b <- projoint(.data = out1,                  .qoi = qoi_3,                  .estimand = \"amce\",                  .irr = 0.75)  amce1b@estimates ## # A tibble: 2 × 8 ##   estimand         estimate     se conf.low conf.high attribute level  baseline ##   <chr>               <dbl>  <dbl>    <dbl>     <dbl> <chr>     <chr>  <chr>    ## 1 amce_uncorrected   -0.130 0.0188   -0.167   -0.0931 att1      level3 level1   ## 2 amce_corrected     -0.184 0.0266   -0.236   -0.132  att1      level3 level1"},{"path":"https://yhoriuchi.github.io/projoint/articles/04-estimate.html","id":"amce-choice-level-specific-level","dir":"Articles","previous_headings":"4.3 Estimate AMCEs","what":"AMCE (choice-level) – specific level","title":"04. Estimate corrected MMs or AMCEs","text":"","code":"qoi_4 <- set_qoi(   .structure = \"choice_level\",   .estimand = \"amce\",   .attribute = \"att1\",    .level = c(\"level1\", \"level3\"),   .baseline = c(\"level1\", \"level1\") )  amce2 <- projoint(.data = out1,                   .qoi = qoi_4,                   .structure = \"choice_level\",                   .estimand = \"amce\",                    .ignore_position = TRUE)  amce2@estimates ## # A tibble: 2 × 8 ##   estimand         estimate     se conf.low conf.high attribute level   baseline ##   <chr>               <dbl>  <dbl>    <dbl>     <dbl> <chr>     <chr>   <chr>    ## 1 amce_uncorrected  -0.0168 0.0262  -0.0683    0.0346 att1      level1… level1,… ## 2 amce_corrected    -0.0257 0.0403  -0.105     0.0534 att1      level1… level1,…"},{"path":"https://yhoriuchi.github.io/projoint/articles/05_visualize.html","id":"load-the-projoint-package","dir":"Articles","previous_headings":"","what":"5.1 Load the projoint package","title":"05. Visualize MMs or AMCEs","text":"","code":"library(projoint)"},{"path":"https://yhoriuchi.github.io/projoint/articles/05_visualize.html","id":"estimate-mms-and-amces-","dir":"Articles","previous_headings":"","what":"5.2 Estimate MMs and AMCEs.","title":"05. Visualize MMs or AMCEs","text":"","code":"mm   <- projoint(out1_arranged)  amce <- projoint(out1_arranged, .estimand = \"amce\")"},{"path":"https://yhoriuchi.github.io/projoint/articles/05_visualize.html","id":"visualize-mms-and-amces","dir":"Articles","previous_headings":"","what":"5.3 Visualize MMs and AMCEs","title":"05. Visualize MMs or AMCEs","text":"default, researchers prefer view corrected estimates either MMs AMCEs. Researchers can, however, choose instead visualize uncorrected estimates, view together.","code":"plot_projoint(mm) plot_projoint(mm, .estimates = \"uncorrected\") plot_projoint(mm, .estimates = \"both\") plot_projoint(amce, .estimand = \"amce\") plot_projoint(amce, .estimand = \"amce\", .estimates = \"uncorrected\") plot_projoint(amce, .estimand = \"amce\", .estimates = \"both\")"},{"path":"https://yhoriuchi.github.io/projoint/articles/05_visualize.html","id":"visualize-subgroup-differences","dir":"Articles","previous_headings":"","what":"5.4 Visualize subgroup differences","title":"05. Visualize MMs or AMCEs","text":"key quantity interest conjoint tasks whether estimates (MMs AMCEs) differ across subpopulations. subgroup comparisons especially susceptible IRR-induced measurement error bias.","code":""},{"path":"https://yhoriuchi.github.io/projoint/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Yusaku Horiuchi. Maintainer.","code":""},{"path":"https://yhoriuchi.github.io/projoint/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Horiuchi Y, Kaufman (2023). projoint: One Stop Conjoint Shop. R package version 0.2.0, https://yhoriuchi.github.io/projoint/.","code":"@Manual{,   title = {projoint: The One Stop Conjoint Shop},   author = {Yusaku Horiuchi and Aaron Kaufman},   year = {2023},   note = {R package version 0.2.0},   url = {https://yhoriuchi.github.io/projoint/}, }"},{"path":[]},{"path":[]},{"path":"https://yhoriuchi.github.io/projoint/index.html","id":"the-one-stop-conjoint-shop","dir":"","previous_headings":"","what":"The One-Stop Conjoint Shop","title":"The One Stop Conjoint Shop","text":"projoint package general, straightforward, creative conjoint analysis. estimates—either profile-level choice-level—Marginal Means (MMs) Average Marginal Component Effects (AMCEs) based conjoint survey experiment. produces reliable estimates correcting measurement error bias problems known literature (e.g., levels attribute interest). Furthermore, presents general framework researchers can answer range substantively important questions straightforwardly. notes: current version assumes outcome variable binary forced choice. package still construction. Forthcoming features include following: Add article explaining set Qualtrics survey Add function subgroup comparisons. Allow researchers use weights features respondents. Allow researchers use outcome variables, rating.","code":""},{"path":"https://yhoriuchi.github.io/projoint/index.html","id":"installation","dir":"","previous_headings":"The One-Stop Conjoint Shop","what":"Installation","title":"The One Stop Conjoint Shop","text":"can install development version projoint GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"yhoriuchi/projoint\")"},{"path":"https://yhoriuchi.github.io/projoint/index.html","id":"why-projoint","dir":"","previous_headings":"The One-Stop Conjoint Shop","what":"Why projoint?","title":"The One Stop Conjoint Shop","text":"excellent R packages conjoint analysis, including cjoint (Version: 2.1.0, Published: 2018-10-19) cregg (Version: 0.4.0, Published: 2020-06-28). importance advantages using packages: importantly, unlike packages, researchers can fix measurement error bias (Clayton et al, working paper). cjoint cregg packages assume unit analysis profile even researchers design binary choice experiment. define straightforward choice-level MMs AMCEs allow users estimate (Clayton et al, working paper). profile-level MMs (cregg) always attenuated toward 0.5 conjoint design includes “ties” attribute interest (Gander 2021). Consider, example, attribute interest candidate’s party, two levels, {Republican, Democrat}. levels randomly assigned profile, 50% profile-pairs include ties. Therefore, even strongly partisan respondents care candidate’s party always prefer one party another, choose one two tied profiles randomly. Therefore, (profile-level) marginal mean Republican Republican supporters Democrat Democrat supporters 0.75 (= 1 * 0.5 + 0.5 * 0.5). remove ties calculate MMs. profile-level AMCEs (cjoint) may produce counter-intuitive estimates (Abramson, Kocak, Magazinni, Strezhnev, working paper). example, suppose attribute interest candidate’s race, three levels, {white, Black, Asian American}. Specifically, interested whether white respondents prefer Black Asian American candidate. case head--head comparison, suppose 75% white respondents choose Black candidate, rather Asian American candidate. (example choice-level marginal mean.) profile-level AMCE choosing Black candidate using Asian American candidate may larger smaller 75%, surprisingly. AMCE’s calculation include indirect comparisons combinations. set assumptions, profile-level AMCEs can still researchers’ substantive quantities interest (Bansak, Hainmueller, Hopkins, Yamamoto, forthcoming) quantities interest applied researchers. Therefore, provide option estimate alternative, intuitive, quantities interest, choice-level MMs AMCEs. Researchers often assume profile within profile-pair needs independent. critical assumption conjoint analysis. fact, researchers consider variety research questions cross-attribute constraints, profile pair one incumbent one challenger, profile pair sum values one (e.g., expected chance winning seat two candidates). framework software allow researchers examine variety questions flexible innovative manners. Last, least, package provide easiest possible way re-label re-order attributes levels.","code":""},{"path":[]},{"path":"https://yhoriuchi.github.io/projoint/index.html","id":"methods","dir":"","previous_headings":"The One-Stop Conjoint Shop > Relevant Articles","what":"Methods","title":"The One Stop Conjoint Shop","text":"framework methods, please read cite following article: Abstract: Conjoint survey designs spreading across social sciences due unusual capacity estimate many causal effects single randomized experiment. Unfortunately, ability mirror complicated real-world choices, designs often generate substantial measurement error thus bias. replicate data collection analysis eight prominent conjoint studies, closely reproduce published results, show large proportion observed variation answers conjoint questions effectively random noise. discover common empirical pattern measurement error appears conjoint studies , , introduce easy--use statistical method correct bias.","code":""},{"path":"https://yhoriuchi.github.io/projoint/index.html","id":"applications","dir":"","previous_headings":"The One-Stop Conjoint Shop > Relevant Articles","what":"Applications","title":"The One Stop Conjoint Shop","text":"Studies apply framework methods include following: Abstract: minority voters prioritize shared race, ethnicity, partisanship represents Congress? Asian Americans, fastest-growing racial group United States, present important case study analyze trade-offs descriptive partisan representation. addition considerations partisanship, Asian Americans face trade-offs candidates national origin race. find asked outright collective presence legislature, Asian Americans prioritize increased descriptive representation partisan representation. However, choosing candidates dyadic representation, Asian Americans often trade descriptive representation sake shared partisanship. Voters willing cross party lines co-ethnic representative, pan-ethnics. findings important implications ethnic minority voters make decisions political representation contribute understandings heavily understudied heterogeneous group.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/exampleData1.html","id":null,"dir":"Reference","previous_headings":"","what":"Projoint Example Data Set 1: Building Conjoint with a Repeated, Flipped Task — exampleData1","title":"Projoint Example Data Set 1: Building Conjoint with a Repeated, Flipped Task — exampleData1","text":"cleaned Qualtrics output conjoint study compares two potential new building developments. 8 standard tasks well repeat first task, used calculate response instability.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/exampleData1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Projoint Example Data Set 1: Building Conjoint with a Repeated, Flipped Task — exampleData1","text":"","code":"exampleData1"},{"path":"https://yhoriuchi.github.io/projoint/reference/exampleData1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Projoint Example Data Set 1: Building Conjoint with a Repeated, Flipped Task — exampleData1","text":"## `exampleData1` data frame 201 rows 186 columns: ResponseId Unique respondent ID race Respondent race: 6 categories party_1 Respondent party: Democrat, Republican, Independent, Something else party_2 party_1 D R: closer Democrats closer Republicans? party_3 party_1 R: strong R strong R party_4 party_1 D: strong D strong D ideology Respondent ideology Extremely liberal Extremely conservative honesty Attention check: respondents select \"never\" choice1, choice2, ..., choice8 Respondent selections initial 8 conjoint tasks choice1_repeated_flipped Respondent choice task repeats choice1 flipped","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/exampleData1.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Projoint Example Data Set 1: Building Conjoint with a Repeated, Flipped Task — exampleData1","text":"Qualtrics Prolific; see Clayton et al. replication materials.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/exampleData2.html","id":null,"dir":"Reference","previous_headings":"","what":"Projoint Example Data Set 2: Building Conjoint with a Repeated, Unflipped Task — exampleData2","title":"Projoint Example Data Set 2: Building Conjoint with a Repeated, Unflipped Task — exampleData2","text":"cleaned Qualtrics output conjoint study compares two potential new building developments. 8 standard tasks well repeat first task, used calculate response instability.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/exampleData2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Projoint Example Data Set 2: Building Conjoint with a Repeated, Unflipped Task — exampleData2","text":"","code":"exampleData2"},{"path":"https://yhoriuchi.github.io/projoint/reference/exampleData2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Projoint Example Data Set 2: Building Conjoint with a Repeated, Unflipped Task — exampleData2","text":"## `exampleData2` data frame 199 rows 186 columns: ResponseId Unique respondent ID choice1, choice2, ..., choice8 Respondent selections initial 8 conjoint tasks choice1_repeated_notflipped Respondent choice task repeats choice1, unflipped race Respondent race: 5 categories party1 Respondent party party2 party1 D R: closer Democrats closer Republicans? party3 party1 R: strong R strong R party4 party1 D: strong D strong D ideology Respondent ideology Extremely liberal Extremely conservative honesty Attention check: respondents select \"never\" K-1-1, K-1-2, ..., K-8-5 K-X-Y indicates name attribute Yth position table Xth task K-1-1-1, K-1-1-2, ..., K-8-2-7 K-X-Y-Z indicates value attribute Zth position Yth profile (either 1 2 left right profiles) Xth task","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/exampleData2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Projoint Example Data Set 2: Building Conjoint with a Repeated, Unflipped Task — exampleData2","text":"Qualtrics Prolific; see Clayton et al. replication materials.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/exampleData3.html","id":null,"dir":"Reference","previous_headings":"","what":"Projoint Example Data Set 3: Building Conjoint without a Repeated Task — exampleData3","title":"Projoint Example Data Set 3: Building Conjoint without a Repeated Task — exampleData3","text":"cleaned Qualtrics output conjoint study compares two potential new building developments. 8 standard tasks.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/exampleData3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Projoint Example Data Set 3: Building Conjoint without a Repeated Task — exampleData3","text":"","code":"exampleData3"},{"path":"https://yhoriuchi.github.io/projoint/reference/exampleData3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Projoint Example Data Set 3: Building Conjoint without a Repeated Task — exampleData3","text":"## `exampleData3` data frame 201 rows 185 columns: ResponseId Unique respondent ID choice1, choice2, ..., choice8 Respondent selections initial 8 conjoint tasks race Respondent race: 5 categories party1 Respondent party party2 party1 D R: closer Democrats closer Republicans? party3 party1 R: strong R strong R party4 party1 D: strong D strong D ideology Respondent ideology Extremely liberal Extremely conservative honesty Attention check: respondents select \"never\" K-1-1, K-1-2, ..., K-8-5 K-X-Y indicates name attribute Yth position table Xth task K-1-1-1, K-1-1-2, ..., K-8-2-7 K-X-Y-Z indicates value attribute Zth position Yth profile (either 1 2 left right profiles) Xth task","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/exampleData3.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Projoint Example Data Set 3: Building Conjoint without a Repeated Task — exampleData3","text":"Qualtrics Prolific; see Clayton et al. replication materials.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/organize_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Organize data before estimation — organize_data","title":"Organize data before estimation — organize_data","text":"function converts full conjoint data set data set structured analyzing specific attribute interest specific level(s) interest. function receives input reshape_data() output feeds pj_estimate().","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/organize_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Organize data before estimation — organize_data","text":"","code":"organize_data(.dataframe, .attribute, .level, .structure, .remove_ties)"},{"path":"https://yhoriuchi.github.io/projoint/reference/organize_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Organize data before estimation — organize_data","text":".dataframe data frame reorganize -- second element list generated reshape_conjoint() .attribute character column name identifying attribute interest .level character vector identifying levels interest. length 1 profile-level analysis 2 choice-level analysis .structure either \"choice_level\" \"profile_level\" .remove_ties TRUE want remove ties attribute interest (profile-level analysis) .baseline character vector identifying baseline level AMCE. length 1 profile-level analysis 2 choice-level analysis","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/out1_arranged.html","id":null,"dir":"Reference","previous_headings":"","what":"Reorganized Projoint Example Data Set 1 — out1_arranged","title":"Reorganized Projoint Example Data Set 1 — out1_arranged","text":"data set identical Example Data Set 1, except attributes levels manually relabeled reordered.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/out1_arranged.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reorganized Projoint Example Data Set 1 — out1_arranged","text":"","code":"out1_arranged"},{"path":"https://yhoriuchi.github.io/projoint/reference/out1_arranged.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Reorganized Projoint Example Data Set 1 — out1_arranged","text":"## `exampleData1` data frame 201 rows 186 columns: ResponseId Unique respondent ID race Respondent race: 6 categories party_1 Respondent party: Democrat, Republican, Independent, Something else party_2 party_1 D R: closer Democrats closer Republicans? party_3 party_1 R: strong R strong R party_4 party_1 D: strong D strong D ideology Respondent ideology Extremely liberal Extremely conservative honesty Attention check: respondents select \"never\" choice1, choice2, ..., choice8 Respondent selections initial 8 conjoint tasks choice1_repeated_flipped Respondent choice task repeats choice1 flipped","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/out1_arranged.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Reorganized Projoint Example Data Set 1 — out1_arranged","text":"Qualtrics Prolific; see Clayton et al. replication materials.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/pj_estimate.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate and correct MMs or AMCEs — pj_estimate","title":"Estimate and correct MMs or AMCEs — pj_estimate","text":"internal function used calculate correct marginal means average marginal component effects conjoint design.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/pj_estimate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate and correct MMs or AMCEs — pj_estimate","text":"","code":"pj_estimate(   .data,   .attribute,   .level,   .baseline = NULL,   .structure = \"profile_level\",   .estimand = \"mm\",   .se_method = \"analytical\",   .irr = NULL,   .remove_ties = TRUE,   .ignore_position = NULL,   .n_sims = NULL,   .n_boot = NULL,   .weights_1 = NULL,   .clusters_1 = NULL,   .se_type_1 = \"classical\",   .weights_2 = NULL,   .clusters_2 = NULL,   .se_type_2 = \"classical\" )"},{"path":"https://yhoriuchi.github.io/projoint/reference/pj_estimate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate and correct MMs or AMCEs — pj_estimate","text":".data `projoint_data` object .attribute character column name identifying attribute interest .level character vector identifying levels interest. length 1 profile-level analysis 2 choice-level analysis .baseline character vector identifying baseline level. length 1 profile-level analysis 2 choice-level analysis .structure character identifying data structure: \"choice_level\" \"profile_level\" (default). Note: right element .level outcome choice .structure == \"choice_level\" .estimand character identifying estimand: \"mm\" (default) \"amce\" .se_method character identifying method correcting measurement error bias: \"analytical\" (default), \"simulation\", \"bootstrap\" (recommended) .irr NULL (default) IRR calculate using repeated task. Otherwise, numerical value .remove_ties TRUE (default) want remove ties attribute interest (profile-level analysis) .ignore_position TRUE ignore location profile (left right). Relevant .structure == \"choice_level\". Defaults NULL. .n_sims number simulations. Relevant .se_method == \"simulation\" .n_boot number bootstrapped samples. Relevant .se_method == \"bootstrap\" .weights_1 weight estimate IRR (see `lm_robust()`): NULL (default) .clusters_1 clusters estimate IRR (see `lm_robust()`): NULL (default) .se_type_1 standard error type estimate IRR (see `lm_robust()`): \"classical\" (default) .weights_2 weight estimate MM AMCE (see `lm_robust()`): NULL (default) .clusters_2 clusters estimate MM AMCE (see `lm_robust()`): NULL (default) .se_type_2 standard error type estimate MM AMCE (see `lm_robust()`): \"classical\" (default)","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/pj_estimate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate and correct MMs or AMCEs — pj_estimate","text":"data frame estimates","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/plot_projoint.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot all MMs or AMCEs — plot_projoint","title":"Plot all MMs or AMCEs — plot_projoint","text":"function produces MM AMCE plots given output `projoint` function.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/plot_projoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot all MMs or AMCEs — plot_projoint","text":"","code":"plot_projoint(   .data,   .estimand = \"mm\",   .estimates = \"corrected\",   .base_size = 12,   .base_family = \"\" )"},{"path":"https://yhoriuchi.github.io/projoint/reference/plot_projoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot all MMs or AMCEs — plot_projoint","text":".data `projoint_results_mm` `projoint_results_amce` object .estimand Either \"mm\" marginal mean (default) \"amce\" average marginal component effect .estimates estimates plotted, either \"corrected\" (default), \"uncorrected\", \"\" .base_size base font size, given pts. .base_family base font family","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/plot_projoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot all MMs or AMCEs — plot_projoint","text":"ggplot object","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/plot_projoint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot all MMs or AMCEs — plot_projoint","text":"","code":"library(projoint)  data(\"exampleData1\") head(exampleData1) #> # A tibble: 6 × 185 #>   ResponseId      choice1_repeated_fli…¹ choice1 choice2 choice3 choice4 choice5 #>   <chr>           <chr>                  <chr>   <chr>   <chr>   <chr>   <chr>   #> 1 R_1M3TDihZzq9z… Community B            Commun… Commun… Commun… Commun… Commun… #> 2 R_3HtXzkcSSlfi… Community B            Commun… Commun… Commun… Commun… Commun… #> 3 R_yjYj0jtOY98X… Community B            Commun… Commun… Commun… Commun… Commun… #> 4 R_1dKd05O6FTOV… Community B            Commun… Commun… Commun… Commun… Commun… #> 5 R_1otDp642wWYl… Community A            Commun… Commun… Commun… Commun… Commun… #> 6 R_2BnD3fuJMRKZ… Community A            Commun… Commun… Commun… Commun… Commun… #> # ℹ abbreviated name: ¹​choice1_repeated_flipped #> # ℹ 178 more variables: choice6 <chr>, choice7 <chr>, choice8 <chr>, #> #   race <chr>, party_1 <chr>, party_2 <chr>, party_3 <chr>, party_4 <chr>, #> #   ideology <chr>, honesty <chr>, `K-1-1` <chr>, `K-1-1-1` <chr>, #> #   `K-1-2` <chr>, `K-1-1-2` <chr>, `K-1-3` <chr>, `K-1-1-3` <chr>, #> #   `K-1-4` <chr>, `K-1-1-4` <chr>, `K-1-5` <chr>, `K-1-1-5` <chr>, #> #   `K-1-6` <chr>, `K-1-1-6` <chr>, `K-1-7` <chr>, `K-1-1-7` <chr>, …  outcomes <- paste0(\"choice\", seq(from = 1, to = 8, by = 1)) outcomes <- c(outcomes, \"choice1_repeated_flipped\")  reshaped_data <- reshape_projoint(   .dataframe = exampleData1,    .idvar = \"ResponseId\",    .outcomes = outcomes,   .outcomes_ids = c(\"A\", \"B\"),   .alphabet = \"K\",    .repeated = TRUE,   .flipped = TRUE)  projoint_output <- projoint(reshaped_data) plot_projoint(projoint_output)"},{"path":"https://yhoriuchi.github.io/projoint/reference/predict_tau.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate tau when there is no repeated task. — predict_tau","title":"Estimate tau when there is no repeated task. — predict_tau","text":"Given output `projoint_data`, function uses extrapolation method produce estimate intra-coder reliability (IRR).","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/predict_tau.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate tau when there is no repeated task. — predict_tau","text":"","code":"predict_tau(.data, .title = NULL)"},{"path":"https://yhoriuchi.github.io/projoint/reference/predict_tau.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate tau when there is no repeated task. — predict_tau","text":".data `projoint_data` object .title title figure","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/predict_tau.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate tau when there is no repeated task. — predict_tau","text":"list (vector predicted value; ggplot object)","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/predict_tau.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate tau when there is no repeated task. — predict_tau","text":"","code":"library(projoint) library(stringr)  ## Example 1: repeated, flipped task data(\"exampleData1\") head(exampleData1) #> # A tibble: 6 × 185 #>   ResponseId      choice1_repeated_fli…¹ choice1 choice2 choice3 choice4 choice5 #>   <chr>           <chr>                  <chr>   <chr>   <chr>   <chr>   <chr>   #> 1 R_1M3TDihZzq9z… Community B            Commun… Commun… Commun… Commun… Commun… #> 2 R_3HtXzkcSSlfi… Community B            Commun… Commun… Commun… Commun… Commun… #> 3 R_yjYj0jtOY98X… Community B            Commun… Commun… Commun… Commun… Commun… #> 4 R_1dKd05O6FTOV… Community B            Commun… Commun… Commun… Commun… Commun… #> 5 R_1otDp642wWYl… Community A            Commun… Commun… Commun… Commun… Commun… #> 6 R_2BnD3fuJMRKZ… Community A            Commun… Commun… Commun… Commun… Commun… #> # ℹ abbreviated name: ¹​choice1_repeated_flipped #> # ℹ 178 more variables: choice6 <chr>, choice7 <chr>, choice8 <chr>, #> #   race <chr>, party_1 <chr>, party_2 <chr>, party_3 <chr>, party_4 <chr>, #> #   ideology <chr>, honesty <chr>, `K-1-1` <chr>, `K-1-1-1` <chr>, #> #   `K-1-2` <chr>, `K-1-1-2` <chr>, `K-1-3` <chr>, `K-1-1-3` <chr>, #> #   `K-1-4` <chr>, `K-1-1-4` <chr>, `K-1-5` <chr>, `K-1-1-5` <chr>, #> #   `K-1-6` <chr>, `K-1-1-6` <chr>, `K-1-7` <chr>, `K-1-1-7` <chr>, …  outcomes <- paste0(\"choice\", seq(from = 1, to = 8, by = 1)) outcomes <- c(outcomes, \"choice1_repeated_flipped\") reshaped_data <- reshape_projoint(   .dataframe = exampleData1,    .idvar = \"ResponseId\",    .outcomes = outcomes,   .outcomes_ids = c(\"A\", \"B\"),   .alphabet = \"K\",    .repeated = TRUE,   .flipped = TRUE)    tau1 <- predict_tau(reshaped_data) tau1 #> An object of class \"projoint_irr\" #> Slot \"irr\": #> # A tibble: 8 × 2 #>       x predicted #>   <int>     <dbl> #> 1     0     0.743 #> 2     1     0.709 #> 3     2     0.675 #> 4     3     0.640 #> 5     4     0.606 #> 6     5     0.572 #> 7     6     0.537 #> 8     7     0.503 #>  #> Slot \"figure\":  #>   ## Example 2: repeated, unflipped task data(\"exampleData2\") head(exampleData2) #> # A tibble: 6 × 185 #>   ResponseId      choice1_repeated_not…¹ choice1 choice2 choice3 choice4 choice5 #>   <chr>           <chr>                  <chr>   <chr>   <chr>   <chr>   <chr>   #> 1 R_1M3TDihZzq9z… Community A            Commun… Commun… Commun… Commun… Commun… #> 2 R_3HtXzkcSSlfi… Community A            Commun… Commun… Commun… Commun… Commun… #> 3 R_yjYj0jtOY98X… Community A            Commun… Commun… Commun… Commun… Commun… #> 4 R_1dKd05O6FTOV… Community A            Commun… Commun… Commun… Commun… Commun… #> 5 R_1otDp642wWYl… Community B            Commun… Commun… Commun… Commun… Commun… #> 6 R_2BnD3fuJMRKZ… Community B            Commun… Commun… Commun… Commun… Commun… #> # ℹ abbreviated name: ¹​choice1_repeated_notflipped #> # ℹ 178 more variables: choice6 <chr>, choice7 <chr>, choice8 <chr>, #> #   race <chr>, party_1 <chr>, party_2 <chr>, party_3 <chr>, party_4 <chr>, #> #   ideology <chr>, honesty <chr>, `K-1-1` <chr>, `K-1-1-1` <chr>, #> #   `K-1-2` <chr>, `K-1-1-2` <chr>, `K-1-3` <chr>, `K-1-1-3` <chr>, #> #   `K-1-4` <chr>, `K-1-1-4` <chr>, `K-1-5` <chr>, `K-1-1-5` <chr>, #> #   `K-1-6` <chr>, `K-1-1-6` <chr>, `K-1-7` <chr>, `K-1-1-7` <chr>, …  outcomes <- paste0(\"choice\", seq(from = 1, to = 8, by = 1)) outcomes <- c(outcomes, \"choice1_repeated_notflipped\") reshaped_data <- reshape_projoint(   .dataframe = exampleData2,    .idvar = \"ResponseId\",    .outcomes = outcomes,   .outcomes_ids = c(\"A\", \"B\"),   .alphabet = \"K\",    .repeated = TRUE,   .flipped = FALSE)    tau2 <- predict_tau(reshaped_data) tau2 #> An object of class \"projoint_irr\" #> Slot \"irr\": #> # A tibble: 8 × 2 #>       x predicted #>   <int>     <dbl> #> 1     0     0.743 #> 2     1     0.709 #> 3     2     0.675 #> 4     3     0.640 #> 5     4     0.606 #> 6     5     0.572 #> 7     6     0.537 #> 8     7     0.503 #>  #> Slot \"figure\":  #>   ## Example 3: no repeated task data(\"exampleData3\") head(exampleData3) #> # A tibble: 6 × 184 #>   ResponseId     choice1 choice2 choice3 choice4 choice5 choice6 choice7 choice8 #>   <chr>          <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #> 1 R_1M3TDihZzq9… Commun… Commun… Commun… Commun… Commun… Commun… Commun… Commun… #> 2 R_3HtXzkcSSlf… Commun… Commun… Commun… Commun… Commun… Commun… Commun… Commun… #> 3 R_yjYj0jtOY98… Commun… Commun… Commun… Commun… Commun… Commun… Commun… Commun… #> 4 R_1dKd05O6FTO… Commun… Commun… Commun… Commun… Commun… Commun… Commun… Commun… #> 5 R_1otDp642wWY… Commun… Commun… Commun… Commun… Commun… Commun… Commun… Commun… #> 6 R_2BnD3fuJMRK… Commun… Commun… Commun… Commun… Commun… Commun… Commun… Commun… #> # ℹ 175 more variables: race <chr>, party_1 <chr>, party_2 <chr>, #> #   party_3 <chr>, party_4 <chr>, ideology <chr>, honesty <chr>, `K-1-1` <chr>, #> #   `K-1-1-1` <chr>, `K-1-2` <chr>, `K-1-1-2` <chr>, `K-1-3` <chr>, #> #   `K-1-1-3` <chr>, `K-1-4` <chr>, `K-1-1-4` <chr>, `K-1-5` <chr>, #> #   `K-1-1-5` <chr>, `K-1-6` <chr>, `K-1-1-6` <chr>, `K-1-7` <chr>, #> #   `K-1-1-7` <chr>, `K-1-2-1` <chr>, `K-1-2-2` <chr>, `K-1-2-3` <chr>, #> #   `K-1-2-4` <chr>, `K-1-2-5` <chr>, `K-1-2-6` <chr>, `K-1-2-7` <chr>, …  outcomes <- paste0(\"choice\", seq(from = 1, to = 8, by = 1)) outcomes <- c(outcomes) reshaped_data <- reshape_projoint(   .dataframe = exampleData3,    .idvar = \"ResponseId\",    .outcomes = outcomes,   .outcomes_ids = c(\"A\", \"B\"),   .alphabet = \"K\",    .repeated = FALSE)    tau3 <- predict_tau(reshaped_data) tau3 #> An object of class \"projoint_irr\" #> Slot \"irr\": #> # A tibble: 8 × 2 #>       x predicted #>   <int>     <dbl> #> 1     0     0.743 #> 2     1     0.709 #> 3     2     0.675 #> 4     3     0.640 #> 5     4     0.606 #> 6     5     0.572 #> 7     6     0.537 #> 8     7     0.503 #>  #> Slot \"figure\":  #>"},{"path":"https://yhoriuchi.github.io/projoint/reference/projoint.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze a conjoint data set and correct for measurement error — projoint","title":"Analyze a conjoint data set and correct for measurement error — projoint","text":"main function analyzes conjoint data set produces measurement error-corrected estimates either marginal means average marginal component effects, ready plotting.  accepts `projoint_data` object, optionally `projoint_qoi` object users wish specify complex quantities interest.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/projoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze a conjoint data set and correct for measurement error — projoint","text":"","code":"projoint(   .data,   .qoi = NULL,   .structure = \"profile_level\",   .estimand = \"mm\",   .se_method = \"analytical\",   .irr = NULL,   .remove_ties = TRUE,   .ignore_position = NULL,   .n_sims = NULL,   .n_boot = NULL,   .weights_1 = NULL,   .clusters_1 = NULL,   .se_type_1 = \"classical\",   .weights_2 = NULL,   .clusters_2 = NULL,   .se_type_2 = \"classical\" )"},{"path":"https://yhoriuchi.github.io/projoint/reference/projoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze a conjoint data set and correct for measurement error — projoint","text":".data `projoint_data` object .qoi `projoint_qoi` object. NULL, defaults producing MMs AMCEs. .structure Either \"profile_level\" (default) \"choice_level\" .estimand Either \"mm\" marginal mean \"amce\" average marginal component effect .se_method c(\"analytic\", \"simulation\", \"bootstrap\") description .irr NULL (default) IRR calculated using repeated task. Otherwise, numerical value .remove_ties Logical: ties removed estimation? Defaults TRUE. .ignore_position TRUE (default) ignore location profile (left right. Relevant analyzed choice level .n_sims number simulations. Relevant .se_method == \"simulation\" .n_boot number bootstrapped samples. Relevant .se_method == \"bootstrap\" .weights_1 weight estimate IRR (see `lm_robust()`): NULL (default) .clusters_1 clusters estimate IRR (see `lm_robust()`): NULL (default) .se_type_1 standard error type estimate IRR (see `lm_robust()`): \"classical\" (default) .weights_2 weight estimate MM AMCE (see `lm_robust()`): NULL (default) .clusters_2 clusters estimate MM AMCE (see `lm_robust()`): NULL (default) .se_type_2 standard error type estimate MM AMCE (see `lm_robust()`): \"classical\" (default)","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/projoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze a conjoint data set and correct for measurement error — projoint","text":"`projoint_results` object","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/projoint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze a conjoint data set and correct for measurement error — projoint","text":"","code":"library(projoint)  data(\"exampleData1\") head(exampleData1) #> # A tibble: 6 × 185 #>   ResponseId      choice1_repeated_fli…¹ choice1 choice2 choice3 choice4 choice5 #>   <chr>           <chr>                  <chr>   <chr>   <chr>   <chr>   <chr>   #> 1 R_1M3TDihZzq9z… Community B            Commun… Commun… Commun… Commun… Commun… #> 2 R_3HtXzkcSSlfi… Community B            Commun… Commun… Commun… Commun… Commun… #> 3 R_yjYj0jtOY98X… Community B            Commun… Commun… Commun… Commun… Commun… #> 4 R_1dKd05O6FTOV… Community B            Commun… Commun… Commun… Commun… Commun… #> 5 R_1otDp642wWYl… Community A            Commun… Commun… Commun… Commun… Commun… #> 6 R_2BnD3fuJMRKZ… Community A            Commun… Commun… Commun… Commun… Commun… #> # ℹ abbreviated name: ¹​choice1_repeated_flipped #> # ℹ 178 more variables: choice6 <chr>, choice7 <chr>, choice8 <chr>, #> #   race <chr>, party_1 <chr>, party_2 <chr>, party_3 <chr>, party_4 <chr>, #> #   ideology <chr>, honesty <chr>, `K-1-1` <chr>, `K-1-1-1` <chr>, #> #   `K-1-2` <chr>, `K-1-1-2` <chr>, `K-1-3` <chr>, `K-1-1-3` <chr>, #> #   `K-1-4` <chr>, `K-1-1-4` <chr>, `K-1-5` <chr>, `K-1-1-5` <chr>, #> #   `K-1-6` <chr>, `K-1-1-6` <chr>, `K-1-7` <chr>, `K-1-1-7` <chr>, …  outcomes <- paste0(\"choice\", seq(from = 1, to = 8, by = 1)) outcomes <- c(outcomes, \"choice1_repeated_flipped\")  reshaped_data <- reshape_projoint(   .dataframe = exampleData1,    .idvar = \"ResponseId\",    .outcomes = outcomes,   .outcomes_ids = c(\"A\", \"B\"),   .alphabet = \"K\",    .repeated = TRUE,   .flipped = TRUE)  projoint(reshaped_data)  #> An object of class \"projoint_results_mm\" #> Slot \"estimates\": #> # A tibble: 48 × 7 #>    estimand       estimate     se conf.low conf.high attribute level  #>    <chr>             <dbl>  <dbl>    <dbl>     <dbl> <chr>     <chr>  #>  1 mm_uncorrected    0.574 0.0134    0.548     0.601 att1      level1 #>  2 mm_corrected      0.614 0.0207    0.573     0.654 att1      level1 #>  3 mm_uncorrected    0.485 0.0134    0.458     0.511 att1      level2 #>  4 mm_corrected      0.477 0.0204    0.437     0.517 att1      level2 #>  5 mm_uncorrected    0.445 0.0131    0.419     0.470 att1      level3 #>  6 mm_corrected      0.416 0.0203    0.376     0.455 att1      level3 #>  7 mm_uncorrected    0.489 0.0133    0.463     0.515 att2      level1 #>  8 mm_corrected      0.483 0.0202    0.443     0.522 att2      level1 #>  9 mm_uncorrected    0.524 0.0130    0.498     0.549 att2      level2 #> 10 mm_corrected      0.536 0.0200    0.497     0.575 att2      level2 #> # ℹ 38 more rows #>  #> Slot \"tau\": #> [1] 0.1721281 #>  #> Slot \"labels\": #> # A tibble: 24 × 4 #>    attribute                level                        attribute_id level_id   #>    <chr>                    <chr>                        <chr>        <chr>      #>  1 Housing Cost             15% of pre-tax income        att1         att1:leve… #>  2 Housing Cost             30% of pre-tax income        att1         att1:leve… #>  3 Housing Cost             40% of pre-tax income        att1         att1:leve… #>  4 Presidential Vote (2020) 30% Democrat, 70% Republican att2         att2:leve… #>  5 Presidential Vote (2020) 50% Democrat, 50% Republican att2         att2:leve… #>  6 Presidential Vote (2020) 70% Democrat, 30% Republican att2         att2:leve… #>  7 Racial Composition       50% White, 50% Nonwhite      att3         att3:leve… #>  8 Racial Composition       75% White, 25% Nonwhite      att3         att3:leve… #>  9 Racial Composition       90% White, 10% Nonwhite      att3         att3:leve… #> 10 Racial Composition       96% White, 4% Nonwhite       att3         att3:leve… #> # ℹ 14 more rows #>  #> Slot \"data\": #> # A tibble: 6,400 × 13 #>    id            task profile att4  att7  att3  att1  att2  att5  att6  selected #>    <chr>        <dbl>   <dbl> <fct> <fct> <fct> <fct> <fct> <fct> <fct>    <dbl> #>  1 R_1M3TDihZz…     1       1 att4… att7… att3… att1… att2… att5… att6…        0 #>  2 R_1M3TDihZz…     1       2 att4… att7… att3… att1… att2… att5… att6…        1 #>  3 R_1M3TDihZz…     2       1 att4… att7… att3… att1… att2… att5… att6…        0 #>  4 R_1M3TDihZz…     2       2 att4… att7… att3… att1… att2… att5… att6…        1 #>  5 R_1M3TDihZz…     3       1 att4… att7… att3… att1… att2… att5… att6…        0 #>  6 R_1M3TDihZz…     3       2 att4… att7… att3… att1… att2… att5… att6…        1 #>  7 R_1M3TDihZz…     4       1 att4… att7… att3… att1… att2… att5… att6…        1 #>  8 R_1M3TDihZz…     4       2 att4… att7… att3… att1… att2… att5… att6…        0 #>  9 R_1M3TDihZz…     5       1 att4… att7… att3… att1… att2… att5… att6…        0 #> 10 R_1M3TDihZz…     5       2 att4… att7… att3… att1… att2… att5… att6…        1 #> # ℹ 6,390 more rows #> # ℹ 2 more variables: selected_repeated <dbl>, agree <dbl> #>  #> Slot \"attribute_of_interest\": #> [1] \"all\" #>  #> Slot \"levels_of_interest\": #> [1] \"all\" #>"},{"path":"https://yhoriuchi.github.io/projoint/reference/projoint_data-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class generator for `projoint_data` — projoint_data-class","title":"Class generator for `projoint_data` — projoint_data-class","text":"Class generator `projoint_data`","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/projoint_irr-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class generator for `projoint_irr` — projoint_irr-class","title":"Class generator for `projoint_irr` — projoint_irr-class","text":"Class generator `projoint_irr`","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/projoint_irr-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class generator for `projoint_irr` — projoint_irr-class","text":"slots Takes two slots: scalar irr, ggplot object figure","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/projoint_qoi_mm-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class generator for `projoint_qoi` — projoint_qoi_mm-class","title":"Class generator for `projoint_qoi` — projoint_qoi_mm-class","text":"Class generator `projoint_qoi`","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/projoint_qoi_mm-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class generator for `projoint_qoi` — projoint_qoi_mm-class","text":"slots Takes two three slots: scalar indicating attribute interest, scalar vector indicating levels interest, scalar vector indicating baseline levels interest (AMCE)","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/projoint_results_mm-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class generators for `projoint_results_mm` and `projoint_results_amce` — projoint_results_mm-class","title":"Class generators for `projoint_results_mm` and `projoint_results_amce` — projoint_results_mm-class","text":"Class generators `projoint_results_mm` `projoint_results_amce`","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/projoint_results_mm-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class generators for `projoint_results_mm` and `projoint_results_amce` — projoint_results_mm-class","text":"slots Takes two slots: `estimate`, data frame `tau`, numerical scalar contains Inherits slots `projoint_data` , optionally `projoint_qoi_mm` `projoint_qoi_amce`","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/read_Qualtrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and re-format a Qualtrics csv (choice text) — read_Qualtrics","title":"Read and re-format a Qualtrics csv (choice text) — read_Qualtrics","text":"Read re-format Qualtrics csv (choice text)","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/read_Qualtrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and re-format a Qualtrics csv (choice text) — read_Qualtrics","text":"","code":"read_Qualtrics(.file)"},{"path":"https://yhoriuchi.github.io/projoint/reference/read_Qualtrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and re-format a Qualtrics csv (choice text) — read_Qualtrics","text":".file file name corresponding csv downloaded Qualtrics.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/read_Qualtrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and re-format a Qualtrics csv (choice text) — read_Qualtrics","text":"data frame suitable reshape_conjoint()","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/read_Qualtrics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read and re-format a Qualtrics csv (choice text) — read_Qualtrics","text":"","code":"library(projoint)  # Not run: # dat <- read_Qualtrics(\"mummolo_nall_replication_cleaned.csv\") # head(dat)"},{"path":"https://yhoriuchi.github.io/projoint/reference/read_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads in a CSV of reordered attributes and levels, and applies it to a `projoint_data` object. — read_labels","title":"Reads in a CSV of reordered attributes and levels, and applies it to a `projoint_data` object. — read_labels","text":"users interested reordering attributes levels conjoint data set. First save existing order CSV using `save_labels`, manually reorder CSV. Finally, use function read modified CSV automatically apply new order existing `projoint_data`.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/read_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads in a CSV of reordered attributes and levels, and applies it to a `projoint_data` object. — read_labels","text":"","code":"read_labels(.data, .filename)"},{"path":"https://yhoriuchi.github.io/projoint/reference/read_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads in a CSV of reordered attributes and levels, and applies it to a `projoint_data` object. — read_labels","text":".data `projoint_data` object .filename name revised CSV file, originally derived `save_labels`, manual arrangement","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/read_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads in a CSV of reordered attributes and levels, and applies it to a `projoint_data` object. — read_labels","text":"projoint object class `projoint_data` ready pass `projoint()`.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/read_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reads in a CSV of reordered attributes and levels, and applies it to a `projoint_data` object. — read_labels","text":"","code":"library(projoint) library(readr)  data(\"exampleData1\") head(exampleData1) #> # A tibble: 6 × 185 #>   ResponseId      choice1_repeated_fli…¹ choice1 choice2 choice3 choice4 choice5 #>   <chr>           <chr>                  <chr>   <chr>   <chr>   <chr>   <chr>   #> 1 R_1M3TDihZzq9z… Community B            Commun… Commun… Commun… Commun… Commun… #> 2 R_3HtXzkcSSlfi… Community B            Commun… Commun… Commun… Commun… Commun… #> 3 R_yjYj0jtOY98X… Community B            Commun… Commun… Commun… Commun… Commun… #> 4 R_1dKd05O6FTOV… Community B            Commun… Commun… Commun… Commun… Commun… #> 5 R_1otDp642wWYl… Community A            Commun… Commun… Commun… Commun… Commun… #> 6 R_2BnD3fuJMRKZ… Community A            Commun… Commun… Commun… Commun… Commun… #> # ℹ abbreviated name: ¹​choice1_repeated_flipped #> # ℹ 178 more variables: choice6 <chr>, choice7 <chr>, choice8 <chr>, #> #   race <chr>, party_1 <chr>, party_2 <chr>, party_3 <chr>, party_4 <chr>, #> #   ideology <chr>, honesty <chr>, `K-1-1` <chr>, `K-1-1-1` <chr>, #> #   `K-1-2` <chr>, `K-1-1-2` <chr>, `K-1-3` <chr>, `K-1-1-3` <chr>, #> #   `K-1-4` <chr>, `K-1-1-4` <chr>, `K-1-5` <chr>, `K-1-1-5` <chr>, #> #   `K-1-6` <chr>, `K-1-1-6` <chr>, `K-1-7` <chr>, `K-1-1-7` <chr>, …  # Write outcome column names outcomes <- paste0(\"choice\", seq(from = 1, to = 8, by = 1)) outcomes <- c(outcomes, \"choice1_repeated_flipped\")  # Reshape the data reshaped_data <- reshape_projoint(   .dataframe = exampleData1,    .idvar = \"ResponseId\",    .outcomes = outcomes,   .outcomes_ids = c(\"A\", \"B\"),   .alphabet = \"K\",    .repeated = TRUE,   .flipped = TRUE)    # Save a CSV file (Not Run) # save_labels(reshaped_data, \"data-raw/labels_original.csv\")  # Not Run: Read a revised CSV file # reshaped_data_arranged <- read_labels(reshaped_data, \"data-raw/labels_arranged.csv\")"},{"path":"https://yhoriuchi.github.io/projoint/reference/reshape_projoint.html","id":null,"dir":"Reference","previous_headings":"","what":"Reshapes survey response data for conjoint analysis — reshape_projoint","title":"Reshapes survey response data for conjoint analysis — reshape_projoint","text":"function takes data frame, preferably `read_Qualtrics()`, reshapes wide long row distinct conjoint task rather respondent.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/reshape_projoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reshapes survey response data for conjoint analysis — reshape_projoint","text":"","code":"reshape_projoint(   .dataframe,   .idvar,   .outcomes,   .outcomes_ids = c(\"1\", \"2\"),   .alphabet = \"F\",   .repeated = FALSE,   .flipped = NULL,   .covariates = NULL )"},{"path":"https://yhoriuchi.github.io/projoint/reference/reshape_projoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reshapes survey response data for conjoint analysis — reshape_projoint","text":".dataframe data frame, preferably `read_Qualtrics()` .idvar character identifying column name containing respondent IDs .outcomes character vector identifying column names contain outcomes. repeated task, LAST element vector. .outcomes_ids vector identifying possibilities outcome variables -- e.g., `c(\"Candidate \", \"Candidate B\")` .alphabet letter indicating conjoint attributes. using Strezhnev's package (https://github.com/astrezhnev/conjointsdt) Qualtrics, default \"F\". .repeated TRUE repeated task (recommended). repeated task first task. .flipped TRUE profiles repeated task flipped (recommended) .covariates character vector identifying respondents' covariates used subgroup analysis","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/reshape_projoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reshapes survey response data for conjoint analysis — reshape_projoint","text":"projoint object class `projoint_data` ready pass `projoint()`.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/reshape_projoint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reshapes survey response data for conjoint analysis — reshape_projoint","text":"","code":"library(projoint) library(stringr)  data(\"exampleData1\") head(exampleData1) #> # A tibble: 6 × 185 #>   ResponseId      choice1_repeated_fli…¹ choice1 choice2 choice3 choice4 choice5 #>   <chr>           <chr>                  <chr>   <chr>   <chr>   <chr>   <chr>   #> 1 R_1M3TDihZzq9z… Community B            Commun… Commun… Commun… Commun… Commun… #> 2 R_3HtXzkcSSlfi… Community B            Commun… Commun… Commun… Commun… Commun… #> 3 R_yjYj0jtOY98X… Community B            Commun… Commun… Commun… Commun… Commun… #> 4 R_1dKd05O6FTOV… Community B            Commun… Commun… Commun… Commun… Commun… #> 5 R_1otDp642wWYl… Community A            Commun… Commun… Commun… Commun… Commun… #> 6 R_2BnD3fuJMRKZ… Community A            Commun… Commun… Commun… Commun… Commun… #> # ℹ abbreviated name: ¹​choice1_repeated_flipped #> # ℹ 178 more variables: choice6 <chr>, choice7 <chr>, choice8 <chr>, #> #   race <chr>, party_1 <chr>, party_2 <chr>, party_3 <chr>, party_4 <chr>, #> #   ideology <chr>, honesty <chr>, `K-1-1` <chr>, `K-1-1-1` <chr>, #> #   `K-1-2` <chr>, `K-1-1-2` <chr>, `K-1-3` <chr>, `K-1-1-3` <chr>, #> #   `K-1-4` <chr>, `K-1-1-4` <chr>, `K-1-5` <chr>, `K-1-1-5` <chr>, #> #   `K-1-6` <chr>, `K-1-1-6` <chr>, `K-1-7` <chr>, `K-1-1-7` <chr>, …  # Write outcome column names outcomes <- paste0(\"choice\", seq(from = 1, to = 8, by = 1)) outcomes <- c(outcomes, \"choice1_repeated_flipped\")  # Reshape the data reshaped_data <- reshape_projoint(   .dataframe = exampleData1,    .idvar = \"ResponseId\",    .outcomes = outcomes,   .outcomes_ids = c(\"A\", \"B\"),   .alphabet = \"K\",    .repeated = TRUE,   .flipped = TRUE)"},{"path":"https://yhoriuchi.github.io/projoint/reference/save_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Save the attributes and levels, and their order, from a conjoint data set, to a CSV file. — save_labels","title":"Save the attributes and levels, and their order, from a conjoint data set, to a CSV file. — save_labels","text":"function saves labels attributes levels, generated `reshape_conjoint()`, CSV file","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/save_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save the attributes and levels, and their order, from a conjoint data set, to a CSV file. — save_labels","text":"","code":"save_labels(.data, .filename)"},{"path":"https://yhoriuchi.github.io/projoint/reference/save_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save the attributes and levels, and their order, from a conjoint data set, to a CSV file. — save_labels","text":".data `projoint_data` object .filename name CSV file saved","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/save_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save the attributes and levels, and their order, from a conjoint data set, to a CSV file. — save_labels","text":"None","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/save_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save the attributes and levels, and their order, from a conjoint data set, to a CSV file. — save_labels","text":"","code":"library(projoint) library(readr)  data(\"exampleData1\") head(exampleData1) #> # A tibble: 6 × 185 #>   ResponseId      choice1_repeated_fli…¹ choice1 choice2 choice3 choice4 choice5 #>   <chr>           <chr>                  <chr>   <chr>   <chr>   <chr>   <chr>   #> 1 R_1M3TDihZzq9z… Community B            Commun… Commun… Commun… Commun… Commun… #> 2 R_3HtXzkcSSlfi… Community B            Commun… Commun… Commun… Commun… Commun… #> 3 R_yjYj0jtOY98X… Community B            Commun… Commun… Commun… Commun… Commun… #> 4 R_1dKd05O6FTOV… Community B            Commun… Commun… Commun… Commun… Commun… #> 5 R_1otDp642wWYl… Community A            Commun… Commun… Commun… Commun… Commun… #> 6 R_2BnD3fuJMRKZ… Community A            Commun… Commun… Commun… Commun… Commun… #> # ℹ abbreviated name: ¹​choice1_repeated_flipped #> # ℹ 178 more variables: choice6 <chr>, choice7 <chr>, choice8 <chr>, #> #   race <chr>, party_1 <chr>, party_2 <chr>, party_3 <chr>, party_4 <chr>, #> #   ideology <chr>, honesty <chr>, `K-1-1` <chr>, `K-1-1-1` <chr>, #> #   `K-1-2` <chr>, `K-1-1-2` <chr>, `K-1-3` <chr>, `K-1-1-3` <chr>, #> #   `K-1-4` <chr>, `K-1-1-4` <chr>, `K-1-5` <chr>, `K-1-1-5` <chr>, #> #   `K-1-6` <chr>, `K-1-1-6` <chr>, `K-1-7` <chr>, `K-1-1-7` <chr>, …  # Write outcome column names outcomes <- paste0(\"choice\", seq(from = 1, to = 8, by = 1)) outcomes <- c(outcomes, \"choice1_repeated_flipped\")  # Reshape the data reshaped_data <- reshape_projoint(   .dataframe = exampleData1,    .idvar = \"ResponseId\",    .outcomes = outcomes,   .outcomes_ids = c(\"A\", \"B\"),   .alphabet = \"K\",    .repeated = TRUE,   .flipped = TRUE)  # Not Run: Save a CSV file # save_labels(reshaped_data, \"data-raw/labels_original.csv\")"},{"path":"https://yhoriuchi.github.io/projoint/reference/set_qoi.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the quantities of interest — set_qoi","title":"Set the quantities of interest — set_qoi","text":"function allows users specify fine-tuned details conjoint analysis. particular, users can set specific quantities interest aside simple AMCEs MMs.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/set_qoi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the quantities of interest — set_qoi","text":"","code":"set_qoi(   .structure = \"profile_level\",   .estimand = \"mm\",   .attribute,   .level,   .baseline = NULL )"},{"path":"https://yhoriuchi.github.io/projoint/reference/set_qoi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the quantities of interest — set_qoi","text":".structure Either \"profile_level\" \"choice_level\" .estimand Either \"mm\" marginal mean \"amce\" average marginal component effect .attribute character column name identifying attribute interest .level character vector identifying levels interest. length 1 profile-level analysis 2 choice-level analysis .baseline character vector identifying baseline level AMCE. length 1 profile-level analysis 2 choice-level analysis","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/set_qoi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the quantities of interest — set_qoi","text":"`projoint_qoi` object","code":""},{"path":"https://yhoriuchi.github.io/projoint/news/index.html","id":"projoint-development-version","dir":"Changelog","previous_headings":"","what":"projoint (development version)","title":"projoint (development version)","text":"written","code":""}]
