[{"path":"https://yhoriuchi.github.io/projoint/articles/01-read-wrangle.html","id":"test","dir":"Articles","previous_headings":"","what":"Test","title":"Step 01: Read and wrangle data","text":"","code":"library(projoint)"},{"path":"https://yhoriuchi.github.io/projoint/articles/01-read-wrangle.html","id":"data-with-the-flipped-repeated-tasks","dir":"Articles","previous_headings":"","what":"Data with the flipped repeated tasks","title":"Step 01: Read and wrangle data","text":"","code":"outcomes <- paste0(\"choice\", seq(from = 1, to = 8, by = 1)) outcomes <- c(outcomes, \"choice1_repeated_flipped\") out1 <- reshape_conjoint(.data = exampleData1,                           .idvar = \"ResponseId\",                           .outcomes = outcomes,                          .outcomes_ids = c(\"A\", \"B\"),                          .alphabet = \"K\",                           .repeated = TRUE,                          .flipped = TRUE)"},{"path":"https://yhoriuchi.github.io/projoint/articles/01-read-wrangle.html","id":"data-with-the-not-flipped-repeated-tasks","dir":"Articles","previous_headings":"","what":"Data with the not-flipped repeated tasks","title":"Step 01: Read and wrangle data","text":"","code":"outcomes <- paste0(\"choice\", seq(from = 1, to = 8, by = 1)) outcomes <- c(outcomes, \"choice1_repeated_notflipped\") out2 <- reshape_conjoint(.data = exampleData2,                           .idvar = \"ResponseId\",                           .outcomes = outcomes,                          .outcomes_ids = c(\"A\", \"B\"),                          .alphabet = \"K\",                           .repeated = TRUE,                          .flipped = FALSE)"},{"path":"https://yhoriuchi.github.io/projoint/articles/01-read-wrangle.html","id":"data-without-the-repeated-tasks","dir":"Articles","previous_headings":"","what":"Data without the repeated tasks","title":"Step 01: Read and wrangle data","text":"","code":"outcomes <- paste0(\"choice\", seq(from = 1, to = 8, by = 1)) out3 <- reshape_conjoint(.data = exampleData3,                           .idvar = \"ResponseId\",                           .outcomes = outcomes,                          .outcomes_ids = c(\"A\", \"B\"),                          .alphabet = \"K\",                           .repeated = FALSE,                          .flipped = NULL)"},{"path":"https://yhoriuchi.github.io/projoint/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Yusaku Horiuchi. Maintainer.","code":""},{"path":"https://yhoriuchi.github.io/projoint/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Horiuchi Y, Kaufman (2023). projoint: General, Straightforward, Creative Framework Conjoint Analysis. R package version 0.2.0, https://yhoriuchi.github.io/projoint/.","code":"@Manual{,   title = {projoint: A More General, More Straightforward, and More Creative Framework for Conjoint Analysis},   author = {Yusaku Horiuchi and Aaron Kaufman},   year = {2023},   note = {R package version 0.2.0},   url = {https://yhoriuchi.github.io/projoint/}, }"},{"path":[]},{"path":[]},{"path":"https://yhoriuchi.github.io/projoint/index.html","id":"a-more-general-more-straightforward-and-more-creative-framework-for-conjoint-analysis","dir":"","previous_headings":"","what":"A More General, More Straightforward, and More Creative Framework for Conjoint Analysis","title":"A More General, More Straightforward, and More Creative Framework for Conjoint Analysis","text":"projoint package general, straightforward, creative conjoint analysis. estimates Average Marginal Component Effects (AMCEs) Marginal Means (MMs) based conjoint survey experiment. produces reliable estimates correcting measurement error bias problems known literature (e.g., levels attribute interest). Furthermore, presents general framework researchers can answer range substantively important questions straightforwardly. notes: current version assumes outcome variable binary forced choice. package still construction. plan make first release end July 2023.","code":""},{"path":"https://yhoriuchi.github.io/projoint/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A More General, More Straightforward, and More Creative Framework for Conjoint Analysis","text":"can install development version projoint GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"yhoriuchi/projoint\")"},{"path":"https://yhoriuchi.github.io/projoint/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"A More General, More Straightforward, and More Creative Framework for Conjoint Analysis","text":"written.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/exampleData1.html","id":null,"dir":"Reference","previous_headings":"","what":"Projoint Example Data Set 1: Building Conjoint with a Repeated, Flipped Task — exampleData1","title":"Projoint Example Data Set 1: Building Conjoint with a Repeated, Flipped Task — exampleData1","text":"cleaned Qualtrics output conjoint study compares two potential new building developments. 8 standard tasks well repeat first task, used calculate response instability.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/exampleData1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Projoint Example Data Set 1: Building Conjoint with a Repeated, Flipped Task — exampleData1","text":"","code":"exampleData1"},{"path":"https://yhoriuchi.github.io/projoint/reference/exampleData1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Projoint Example Data Set 1: Building Conjoint with a Repeated, Flipped Task — exampleData1","text":"## `exampleData1` data frame 201 rows 186 columns: ResponseId Unique respondent ID choice1, choice2, ..., choice8 Respondent selections initial 8 conjoint tasks choice1_repeated_flipped Respondent choice task repeats choice1 flipped race Respondent race: 5 categories party1 Respondent party party2 party1 D R: closer Democrats closer Republicans? party3 party1 R: strong R strong R party4 party1 D: strong D strong D ideology Respondent ideology Extremely liberal Extremely conservative hoensty Attention check: respondents select \"never\" K-1-1, K-1-2, ..., K-8-5 K-X-Y indicates name attribute Yth position table Xth task K-1-1-1, K-1-1-2, ..., K-8-2-7 K-X-Y-Z indicates value attribute Zth position Yth profile (either 1 2 left right profiles) Xth task","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/exampleData1.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Projoint Example Data Set 1: Building Conjoint with a Repeated, Flipped Task — exampleData1","text":"Qualtrics Prolific; see Clayton et al. replication materials.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/exampleData2.html","id":null,"dir":"Reference","previous_headings":"","what":"Projoint Example Data Set 2: Building Conjoint with a Repeated, Unflipped Task — exampleData2","title":"Projoint Example Data Set 2: Building Conjoint with a Repeated, Unflipped Task — exampleData2","text":"cleaned Qualtrics output conjoint study compares two potential new building developments. 8 standard tasks well repeat first task, used calculate response instability.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/exampleData2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Projoint Example Data Set 2: Building Conjoint with a Repeated, Unflipped Task — exampleData2","text":"","code":"exampleData2"},{"path":"https://yhoriuchi.github.io/projoint/reference/exampleData2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Projoint Example Data Set 2: Building Conjoint with a Repeated, Unflipped Task — exampleData2","text":"## `exampleData2` data frame 199 rows 186 columns: ResponseId Unique respondent ID choice1, choice2, ..., choice8 Respondent selections initial 8 conjoint tasks choice1_repeated_notflipped Respondent choice task repeats choice1, unflipped race Respondent race: 5 categories party1 Respondent party party2 party1 D R: closer Democrats closer Republicans? party3 party1 R: strong R strong R party4 party1 D: strong D strong D ideology Respondent ideology Extremely liberal Extremely conservative hoensty Attention check: respondents select \"never\" K-1-1, K-1-2, ..., K-8-5 K-X-Y indicates name attribute Yth position table Xth task K-1-1-1, K-1-1-2, ..., K-8-2-7 K-X-Y-Z indicates value attribute Zth position Yth profile (either 1 2 left right profiles) Xth task","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/exampleData2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Projoint Example Data Set 2: Building Conjoint with a Repeated, Unflipped Task — exampleData2","text":"Qualtrics Prolific; see Clayton et al. replication materials.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/exampleData3.html","id":null,"dir":"Reference","previous_headings":"","what":"Projoint Example Data Set 3: Building Conjoint without a Repeated Task — exampleData3","title":"Projoint Example Data Set 3: Building Conjoint without a Repeated Task — exampleData3","text":"cleaned Qualtrics output conjoint study compares two potential new building developments. 8 standard tasks.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/exampleData3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Projoint Example Data Set 3: Building Conjoint without a Repeated Task — exampleData3","text":"","code":"exampleData3"},{"path":"https://yhoriuchi.github.io/projoint/reference/exampleData3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Projoint Example Data Set 3: Building Conjoint without a Repeated Task — exampleData3","text":"## `exampleData3` data frame 201 rows 185 columns: ResponseId Unique respondent ID choice1, choice2, ..., choice8 Respondent selections initial 8 conjoint tasks race Respondent race: 5 categories party1 Respondent party party2 party1 D R: closer Democrats closer Republicans? party3 party1 R: strong R strong R party4 party1 D: strong D strong D ideology Respondent ideology Extremely liberal Extremely conservative hoensty Attention check: respondents select \"never\" K-1-1, K-1-2, ..., K-8-5 K-X-Y indicates name attribute Yth position table Xth task K-1-1-1, K-1-1-2, ..., K-8-2-7 K-X-Y-Z indicates value attribute Zth position Yth profile (either 1 2 left right profiles) Xth task","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/exampleData3.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Projoint Example Data Set 3: Building Conjoint without a Repeated Task — exampleData3","text":"Qualtrics Prolific; see Clayton et al. replication materials.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/organize_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Organize data before estimation — organize_data","title":"Organize data before estimation — organize_data","text":"function ...","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/organize_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Organize data before estimation — organize_data","text":"","code":"organize_data(   .dataframe,   .attribute,   .level,   .structure = \"choice_level\",   .remove_ties = TRUE,   .repeated_task = TRUE )"},{"path":"https://yhoriuchi.github.io/projoint/reference/organize_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Organize data before estimation — organize_data","text":".dataframe data frame -- second element list generated reshape_conjoint() .attribute character identifying attribute interest .level character vector identifying levels interest. length 1 profile-level analysis 2 choice-level analysis .structure either \"choice_level\" \"profile_level\" .remove_ties TRUE want remove ties attribute interest (profile-level analysis) .repeated_task TRUE repeated task used calculate IRR (recommended)","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/organize_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Organize data before estimation — organize_data","text":"data frame","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/pj_estimate.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate and correct MMs or AMCEs — pj_estimate","title":"Estimate and correct MMs or AMCEs — pj_estimate","text":"function ...","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/pj_estimate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate and correct MMs or AMCEs — pj_estimate","text":"","code":"pj_estimate(   .list,   .estimand = \"mm\",   .method = \"analytical\",   .irr = NULL,   .n_boot = 1000,   .n_sims = 10000 )"},{"path":"https://yhoriuchi.github.io/projoint/reference/pj_estimate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate and correct MMs or AMCEs — pj_estimate","text":".list list generated organize_data() .estimand character identifying estimand: \"mm\" \"amce\" .method character identifying method correcting measurement error bias: \"analytical\", \"simulation\", \"bootstrap\" .irr NULL IRR calculcate using repeated task. Otherwise, numerical value .n_boot number bootstrapped samples .n_sims number simulations","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/pj_estimate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate and correct MMs or AMCEs — pj_estimate","text":"data frame","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/predict_tau.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate tau when there is no repeated task. — predict_tau","title":"Estimate tau when there is no repeated task. — predict_tau","text":"function ...","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/predict_tau.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate tau when there is no repeated task. — predict_tau","text":"","code":"predict_tau(.dataframe, .idvar = \"id\", .title = NULL)"},{"path":"https://yhoriuchi.github.io/projoint/reference/predict_tau.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate tau when there is no repeated task. — predict_tau","text":".dataframe data frame -- second element list generated reshape_conjoint() .idvar character identifying column name containing respondent IDs .title title figure","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/predict_tau.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate tau when there is no repeated task. — predict_tau","text":"list (vector predicted value; ggplot object)","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/predict_tau.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate tau when there is no repeated task. — predict_tau","text":"","code":"library(projoint) library(stringr)  ## Example 1: repeated, flipped task data(\"exampleData1\") head(exampleData1) #> # A tibble: 6 × 196 #>   ResponseId     choice1 choice2 choice3 choice4 choice5 choice6 choice7 choice8 #>   <chr>          <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #> 1 R_1M3TDihZzq9… Commun… Commun… Commun… Commun… Commun… Commun… Commun… Commun… #> 2 R_3HtXzkcSSlf… Commun… Commun… Commun… Commun… Commun… Commun… Commun… Commun… #> 3 R_yjYj0jtOY98… Commun… Commun… Commun… Commun… Commun… Commun… Commun… Commun… #> 4 R_1dKd05O6FTO… Commun… Commun… Commun… Commun… Commun… Commun… Commun… Commun… #> 5 R_1otDp642wWY… Commun… Commun… Commun… Commun… Commun… Commun… Commun… Commun… #> 6 R_2BnD3fuJMRK… Commun… Commun… Commun… Commun… Commun… Commun… Commun… Commun… #> # ℹ 187 more variables: choice1_repeated_flipped <chr>, gender <chr>, #> #   hhi <dbl>, ethnicity <dbl>, hispanic <dbl>, education <dbl>, #> #   political_party <dbl>, region <dbl>, zip <chr>, `K-1-1` <chr>, #> #   `K-1-1-1` <chr>, `K-1-2` <chr>, `K-1-1-2` <chr>, `K-1-3` <chr>, #> #   `K-1-1-3` <chr>, `K-1-4` <chr>, `K-1-1-4` <chr>, `K-1-5` <chr>, #> #   `K-1-1-5` <chr>, `K-1-6` <chr>, `K-1-1-6` <chr>, `K-1-7` <chr>, #> #   `K-1-1-7` <chr>, `K-1-2-1` <chr>, `K-1-2-2` <chr>, `K-1-2-3` <chr>, …  outcomes <- str_c(\"choice\", seq(from = 1, to = 8, by = 1)) outcomes <- c(outcomes, \"choice1_repeated_flipped\") reshaped_data = reshaped_data <- reshape_conjoint(   .dataframe = exampleData1,    .idvar = \"ResponseId\",    .outcomes = outcomes,   .outcomes_ids = c(\"A\", \"B\"),   .alphabet = \"K\",    .repeated = TRUE,   .flipped = TRUE)    tau1 <- predict_tau(reshaped_data[[2]]) tau1 #> $predicted #>   x predicted #> 1 0 0.7434289 #> 2 1 0.7090729 #> 3 2 0.6747168 #> 4 3 0.6403607 #> 5 4 0.6060047 #> 6 5 0.5716486 #> 7 6 0.5372926 #> 8 7 0.5029365 #>  #> $figure  #>   ## Example 2: repeated, unflipped task data(\"exampleData2\") head(exampleData2) #> # A tibble: 6 × 196 #>   ResponseId     choice1 choice2 choice3 choice4 choice5 choice6 choice7 choice8 #>   <chr>          <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #> 1 R_1M3TDihZzq9… Commun… Commun… Commun… Commun… Commun… Commun… Commun… Commun… #> 2 R_3HtXzkcSSlf… Commun… Commun… Commun… Commun… Commun… Commun… Commun… Commun… #> 3 R_yjYj0jtOY98… Commun… Commun… Commun… Commun… Commun… Commun… Commun… Commun… #> 4 R_1dKd05O6FTO… Commun… Commun… Commun… Commun… Commun… Commun… Commun… Commun… #> 5 R_1otDp642wWY… Commun… Commun… Commun… Commun… Commun… Commun… Commun… Commun… #> 6 R_2BnD3fuJMRK… Commun… Commun… Commun… Commun… Commun… Commun… Commun… Commun… #> # ℹ 187 more variables: choice1_repeated_notflipped <chr>, gender <chr>, #> #   hhi <dbl>, ethnicity <dbl>, hispanic <dbl>, education <dbl>, #> #   political_party <dbl>, region <dbl>, zip <chr>, `K-1-1` <chr>, #> #   `K-1-1-1` <chr>, `K-1-2` <chr>, `K-1-1-2` <chr>, `K-1-3` <chr>, #> #   `K-1-1-3` <chr>, `K-1-4` <chr>, `K-1-1-4` <chr>, `K-1-5` <chr>, #> #   `K-1-1-5` <chr>, `K-1-6` <chr>, `K-1-1-6` <chr>, `K-1-7` <chr>, #> #   `K-1-1-7` <chr>, `K-1-2-1` <chr>, `K-1-2-2` <chr>, `K-1-2-3` <chr>, …  outcomes <- str_c(\"choice\", seq(from = 1, to = 8, by = 1)) outcomes <- c(outcomes, \"choice1_repeated_notflipped\") reshaped_data = reshaped_data <- reshape_conjoint(   .dataframe = exampleData2,    .idvar = \"ResponseId\",    .outcomes = outcomes,   .outcomes_ids = c(\"A\", \"B\"),   .alphabet = \"K\",    .repeated = TRUE,   .flipped = FALSE)    tau2 <- predict_tau(reshaped_data[[2]]) tau2 #> $predicted #>   x predicted #> 1 0 0.7434289 #> 2 1 0.7090729 #> 3 2 0.6747168 #> 4 3 0.6403607 #> 5 4 0.6060047 #> 6 5 0.5716486 #> 7 6 0.5372926 #> 8 7 0.5029365 #>  #> $figure  #>   ## Example 3: no repeated task data(\"exampleData3\") head(exampleData3) #> # A tibble: 6 × 195 #>   ResponseId     choice1 choice2 choice3 choice4 choice5 choice6 choice7 choice8 #>   <chr>          <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #> 1 R_1M3TDihZzq9… Commun… Commun… Commun… Commun… Commun… Commun… Commun… Commun… #> 2 R_3HtXzkcSSlf… Commun… Commun… Commun… Commun… Commun… Commun… Commun… Commun… #> 3 R_yjYj0jtOY98… Commun… Commun… Commun… Commun… Commun… Commun… Commun… Commun… #> 4 R_1dKd05O6FTO… Commun… Commun… Commun… Commun… Commun… Commun… Commun… Commun… #> 5 R_1otDp642wWY… Commun… Commun… Commun… Commun… Commun… Commun… Commun… Commun… #> 6 R_2BnD3fuJMRK… Commun… Commun… Commun… Commun… Commun… Commun… Commun… Commun… #> # ℹ 186 more variables: gender <chr>, hhi <dbl>, ethnicity <dbl>, #> #   hispanic <dbl>, education <dbl>, political_party <dbl>, region <dbl>, #> #   zip <chr>, `K-1-1` <chr>, `K-1-1-1` <chr>, `K-1-2` <chr>, `K-1-1-2` <chr>, #> #   `K-1-3` <chr>, `K-1-1-3` <chr>, `K-1-4` <chr>, `K-1-1-4` <chr>, #> #   `K-1-5` <chr>, `K-1-1-5` <chr>, `K-1-6` <chr>, `K-1-1-6` <chr>, #> #   `K-1-7` <chr>, `K-1-1-7` <chr>, `K-1-2-1` <chr>, `K-1-2-2` <chr>, #> #   `K-1-2-3` <chr>, `K-1-2-4` <chr>, `K-1-2-5` <chr>, `K-1-2-6` <chr>, …  outcomes <- str_c(\"choice\", seq(from = 1, to = 8, by = 1)) outcomes <- c(outcomes) reshaped_data = reshaped_data <- reshape_conjoint(   .dataframe = exampleData3,    .idvar = \"ResponseId\",    .outcomes = outcomes,   .outcomes_ids = c(\"A\", \"B\"),   .alphabet = \"K\",    .repeated = FALSE)    tau3 <- predict_tau(reshaped_data[[2]]) tau3 #> $predicted #>   x predicted #> 1 0 0.7434289 #> 2 1 0.7090729 #> 3 2 0.6747168 #> 4 3 0.6403607 #> 5 4 0.6060047 #> 6 5 0.5716486 #> 7 6 0.5372926 #> 8 7 0.5029365 #>  #> $figure  #>"},{"path":"https://yhoriuchi.github.io/projoint/reference/read_Qualtrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and re-format a Qualtrics csv (choice text) — read_Qualtrics","title":"Read and re-format a Qualtrics csv (choice text) — read_Qualtrics","text":"Read re-format Qualtrics csv (choice text)","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/read_Qualtrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and re-format a Qualtrics csv (choice text) — read_Qualtrics","text":"","code":"read_Qualtrics(.file)"},{"path":"https://yhoriuchi.github.io/projoint/reference/read_Qualtrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and re-format a Qualtrics csv (choice text) — read_Qualtrics","text":".file file name corresponding csv downloaded Qualtrics.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/read_Qualtrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and re-format a Qualtrics csv (choice text) — read_Qualtrics","text":"data frame suitable reshape_conjoint()","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/read_Qualtrics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read and re-format a Qualtrics csv (choice text) — read_Qualtrics","text":"","code":"library(projoint)  # Not run: # dat <- read_Qualtrics(\"mummolo_nall_replication.csv\") # head(dat)"},{"path":"https://yhoriuchi.github.io/projoint/reference/reshape_conjoint.html","id":null,"dir":"Reference","previous_headings":"","what":"Reshapes survey response data for conjoint analysis — reshape_conjoint","title":"Reshapes survey response data for conjoint analysis — reshape_conjoint","text":"function takes data frame, preferably “read_Qualtrics()”, reshapes wide long row distinct conjoint task rather respondent.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/reshape_conjoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reshapes survey response data for conjoint analysis — reshape_conjoint","text":"","code":"reshape_conjoint(   .dataframe,   .idvar,   .outcomes,   .outcomes_ids = c(\"1\", \"2\"),   .alphabet = \"F\",   .repeated = FALSE,   .flipped = NULL )"},{"path":"https://yhoriuchi.github.io/projoint/reference/reshape_conjoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reshapes survey response data for conjoint analysis — reshape_conjoint","text":".dataframe data frame, preferably “read_Qualtrics()” .idvar character identifying column name containing respondent IDs .outcomes character vector identifying column names contain outcomes .outcomes_ids vector identifying profiles outcomes -- e.g., c(\"\", \"B\") .alphabet letter indicating conjoint attributes. using Strezhnev's package (https://github.com/astrezhnev/conjointsdt) Qualtrics, default \"F\". .repeated TRUE repeated task (recommended). repeated task first task. .flipped TRUE profiles repeated task flipped (recommended)","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/reshape_conjoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reshapes survey response data for conjoint analysis — reshape_conjoint","text":"conjoint task-level data frame (words, long format) ready conjoint analysis.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/reshape_conjoint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reshapes survey response data for conjoint analysis — reshape_conjoint","text":"","code":"library(projoint) library(stringr)  data(\"exampleData1\") head(exampleData1) #> # A tibble: 6 × 196 #>   ResponseId     choice1 choice2 choice3 choice4 choice5 choice6 choice7 choice8 #>   <chr>          <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #> 1 R_1M3TDihZzq9… Commun… Commun… Commun… Commun… Commun… Commun… Commun… Commun… #> 2 R_3HtXzkcSSlf… Commun… Commun… Commun… Commun… Commun… Commun… Commun… Commun… #> 3 R_yjYj0jtOY98… Commun… Commun… Commun… Commun… Commun… Commun… Commun… Commun… #> 4 R_1dKd05O6FTO… Commun… Commun… Commun… Commun… Commun… Commun… Commun… Commun… #> 5 R_1otDp642wWY… Commun… Commun… Commun… Commun… Commun… Commun… Commun… Commun… #> 6 R_2BnD3fuJMRK… Commun… Commun… Commun… Commun… Commun… Commun… Commun… Commun… #> # ℹ 187 more variables: choice1_repeated_flipped <chr>, gender <chr>, #> #   hhi <dbl>, ethnicity <dbl>, hispanic <dbl>, education <dbl>, #> #   political_party <dbl>, region <dbl>, zip <chr>, `K-1-1` <chr>, #> #   `K-1-1-1` <chr>, `K-1-2` <chr>, `K-1-1-2` <chr>, `K-1-3` <chr>, #> #   `K-1-1-3` <chr>, `K-1-4` <chr>, `K-1-1-4` <chr>, `K-1-5` <chr>, #> #   `K-1-1-5` <chr>, `K-1-6` <chr>, `K-1-1-6` <chr>, `K-1-7` <chr>, #> #   `K-1-1-7` <chr>, `K-1-2-1` <chr>, `K-1-2-2` <chr>, `K-1-2-3` <chr>, …  outcomes <- str_c(\"choice\", seq(from = 1, to = 8, by = 1)) outcomes <- c(outcomes, \"choice1_repeated_flipped\") reshaped_data = reshaped_data <- reshape_conjoint(   .dataframe = exampleData1,    .idvar = \"ResponseId\",    .outcomes = outcomes,   .outcomes_ids = c(\"1\", \"2\"),   .alphabet = \"K\",    .repeated = TRUE,   .flipped = TRUE)"},{"path":"https://yhoriuchi.github.io/projoint/news/index.html","id":"projoint-development-version","dir":"Changelog","previous_headings":"","what":"projoint (development version)","title":"projoint (development version)","text":"written","code":""}]
